*** Setting ***
Resource    ../../resources/api-imports.txt
Resource    ../../resources/api-utilities.txt
Resource    ../../resources/api-variables.txt
*** Keywords ***
Create Test Variables For Client Pricing
    [Arguments]    ${client_list}=${in_client_list}
    ${client_list}    Split String    ${client_list}    |
    ${client_list_length}    Get Length    ${client_list}
    Set Test Variable    ${client_list_length}
    Set Test Variable    ${client_list}
    : FOR    ${data}    IN    @{client_list}
    \    ${data_item}    Split String    ${data}    ,
    \    Set Test Variable    ${${data_item[0]}_value}    ${data_item[1]}

Delete Client Pricing And Evict Client Pricing Cache
    [Arguments]    ${airline_code}=ZZ    ${number}=2    ${token}=${default_token}
    Send Delete Request For Client Pricing   ${airline_code}    ${token}
    Evict Client Pricing Cache    ${number}    ${token}

Evict Client Pricing Cache
    [Arguments]    ${number}=2    ${token}=${default_token}
    Create Session    client-pricing    ${${env}_base_url}    verify=True
    ${headers}    Run Keyword If    "${token}" != "None"    Create Dictionary    Content-Type=application/json    Authorization=Bearer ${token}
    ...    ELSE    Create Dictionary    Content-Type=application/json
    : FOR    ${index}    IN RANGE    0    ${number}
    \    ${response}    Get Request    client-pricing    /apac-services-rest/api/caches/evict/client-pricing    headers=${headers}
    \    Set Test Variable    ${response}
    \    Verify Response Status Code Is Correct    200
    \    Log    ${response.headers}
    \    Log    ${response.content}
    Set Test Variable    ${api_flag}    client-pricing

Send Get Request For Client Pricing
    [Arguments]    ${client_id}    ${token}=${default_token}
    Create Session    client_pricing    ${${env}_base_url}    verify=True
    ${headers}    Run Keyword If    "${token}" != "None"    Create Dictionary    Content-Type=application/json    Authorization=Bearer ${token}
    ...    ELSE    Create Dictionary    Content-Type=application/json
    ${response}    Get Request    client_pricing    apac-services-rest/api/client-pricing/${client_id}    headers=${headers}
    Set Test Variable    ${response}
    Log    ${response.headers}
    Log    ${response.content}
    Set Test Variable    ${api_flag}    client_pricing
    
Send Delete Request For Client Pricing
    [Arguments]    ${client_id}    ${token}=${default_token}
    Create Session    client_pricing    ${${env}_base_url}    verify=True
    ${headers}    Run Keyword If    "${token}" != "None"    Create Dictionary    Content-Type=application/json    Authorization=Bearer ${token}
    ...    ELSE    Create Dictionary    Content-Type=application/json
    ${response}    Delete Request    client_pricing    /apac-services-rest/api/client-pricing/${client_id}     headers=${headers}
    Set Test Variable    ${response}
    Log    ${response.headers}
    Log    ${response.content}
    Set Test Variable    ${api_flag}    client_pricing
    
Send Put Request For Client Pricing
    [Arguments]    ${code}=${EMPTY}    ${include_yq_comm}=true    ${token}=${default_token}
    Create Session    client_pricing    ${${env}_base_url}    verify=True
    ${headers}    Run Keyword If    "${token}" != "None"    Create Dictionary    Content-Type=application/json    Authorization=Bearer ${token}
    ...    ELSE    Create Dictionary    Content-Type=application/json
    ${data}    Set Variable    {"code":"${code}","includeYqComm":${include_yq_comm}}
    ${data}    Replace String    ${data}    "null"    null
    ${response}    Put Request    client_pricing    /apac-services-rest/api/client-pricing    data=${data}    headers=${headers}
    Set Test Variable    ${response}
    Log    ${response.headers}
    Log    ${response.content}
    Set Test Variable    ${api_flag}    client_pricing

Update Client Pricing To Original Value And Evict Client Pricing Cache
    [Arguments]    ${airline_code}=9W    ${include_yq_comm}=true    ${number}=2    ${token}=${default_token}
    Send Put Request For Client Pricing    ${airline_code}    ${include_yq_comm}    ${token}
    Evict Client Pricing Cache    ${number}    ${token}
    
Verify Client Pricing Are Correctly Retrieved
    [Arguments]    ${client_id}
    ${data_list}    Split String    ${in_client_pricing_${client_id}_list}    |
    : FOR    ${item}    IN    @{data_list}
    \    ${items}    Split String    ${item}    ,
    \    Run Keyword And Continue On Failure    Verify Json Value Is Correct    $.${items[0]}    ${items[1]}
    
Verify Client Pricing Are Not Retrieved
    Verify String Does Not Contain Substring    ${response.content}    "code"
    Verify String Does Not Contain Substring    ${response.content}    "includeYqComm"