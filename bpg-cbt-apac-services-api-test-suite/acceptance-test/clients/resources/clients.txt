*** Setting ***
Resource          ../../resources/api-imports.txt
Resource          ../../resources/api-utilities.txt
Resource          ../../resources/api-variables.txt
Resource          ../../resources/api-migration-variables.txt

*** Keywords ***
Create Test Variables For Client
    [Arguments]    ${client_id}
    Set Test Variable    ${client_id}
    ${client_products_list}    Split String    ${in_client_products_${client_id}_list}    |
    Set Test Variable    ${client_products_list}
    : FOR    ${data}    IN    @{client_products_list}
    \    ${data_item}    Split String    ${data}    ,
    \    Set Test Variable    ${${data_item[0]}_products_subject_to_mf__value}    ${data_item[1]}
    \    Set Test Variable    ${${data_item[0]}_products_standard__value}    ${data_item[2]}
    ${client_vendors_list}    Split String    ${in_client_vendors_${client_id}_list}    |
    Set Test Variable    ${client_vendors_list}
    : FOR    ${data}    IN    @{client_vendors_list}
    \    ${data_item}    Split String    ${data}    ,
    \    Set Test Variable    ${${data_item[0]}_vendors_percentage__value}    ${data_item[1]}
    \    Set Test Variable    ${${data_item[0]}_vendors_standard__value}    ${data_item[2]}
    ${client_pricings_list}    Split String    ${in_client_pricings_${client_id}_list}    |
    Set Test Variable    ${client_pricings_list}
    : FOR    ${data}    IN    @{client_pricings_list}
    \    ${data_item}    Split String    ${data}    ,
    \    Set Test Variable    ${${data_item[0]}_${data_item[1]}_client_pricings_group__value}    ${data_item[2]}
    \    Set Test Variable    ${${data_item[0]}_${data_item[1]}_client_pricings_fee_option__value}    ${data_item[3]}
    ${client_pricings_transaction_fees_list}    Split String    ${in_client_pricings_transaction_fees_${client_id}_list}    |
    Set Test Variable    ${client_pricings_transaction_fees_list}
    : FOR    ${data}    IN    @{client_pricings_transaction_fees_list}
    \    ${data_item}    Split String    ${data}    ,
    \    Set Test Variable    ${${data_item[0]}_territory_codes_value}    ${data_item[1]}
    \    Set Test Variable    ${${data_item[0]}_tf_amount_value}    ${data_item[2]}
    \    Set Test Variable    ${${data_item[0]}_operator_value}    ${data_item[3]}
    \    Set Test Variable    ${${data_item[0]}_extra_amount_value}    ${data_item[4]}
    \    Set Test Variable    ${${data_item[0]}_per_amount_value}    ${data_item[5]}
    \    Set Test Variable    ${${data_item[0]}_min_amount_value}    ${data_item[6]}
    \    Set Test Variable    ${${data_item[0]}_max_amount_value}    ${data_item[7]}
    \    Set Test Variable    ${${data_item[0]}_start_amount_value}    ${data_item[8]}
    \    Set Test Variable    ${${data_item[0]}_end_amount_value}    ${data_item[9]}

Delete Client And Evict Client Cache
    [Arguments]    ${client_id}=${client_id}    ${number}=2    ${token}=${default_token}
    Send Delete Request For Client    ${client_id}    ${token}
    Evict Client Cache    ${number}    ${token}

Evict Client Cache
    [Arguments]    ${number}=2    ${token}=${default_token}
    Create Session    client    ${${env}_base_url}    verify=True
    ${headers}    Run Keyword If    "${token}" != "None"    Create Dictionary    Content-Type=application/json    Authorization=Bearer ${token}
    ...    ELSE    Create Dictionary    Content-Type=application/json
    : FOR    ${index}    IN RANGE    0    ${number}
    \    ${response}    Get Request    client    /apac-services-rest/api/caches/evict/clients    headers=${headers}
    \    Set Test Variable    ${response}
    \    Verify Response Status Code Is Correct    200
    \    Log    ${response.headers}
    \    Log    ${response.content}
    Set Test Variable    ${api_flag}    client

Send Get Request For Client
    [Arguments]    ${client_id}    ${token}=${default_token}
    Create Session    client    ${${env}_base_url}    verify=True
    ${headers}    Run Keyword If    "${token}" != "None"    Create Dictionary    Content-Type=application/json    Authorization=Bearer ${token}
    ...    ELSE    Create Dictionary    Content-Type=application/json
    ${response}    Get Request    client    apac-services-rest/api/clients/${client_id}    headers=${headers}
    Set Test Variable    ${response}
    Log    ${response.headers}
    Log    ${response.content}
    Set Test Variable    ${api_flag}    client

Send Delete Request For Client
    [Arguments]    ${client_id}    ${token}=${default_token}
    Create Session    client    ${${env}_base_url}    verify=True
    ${headers}    Run Keyword If    "${token}" != "None"    Create Dictionary    Content-Type=application/json    Authorization=Bearer ${token}
    ...    ELSE    Create Dictionary    Content-Type=application/json
    ${response}    Delete Request    client    /apac-services-rest/api/clients/${client_id}    headers=${headers}
    Set Test Variable    ${response}
    Log    ${response.headers}
    Log    ${response.content}
    Set Test Variable    ${api_flag}    client

Send Put Request For Client
    [Arguments]    ${client_list}=${in_client_${client_id}_list}    ${token}=${default_token}
    Create Session    client    ${${env}_base_url}    verify=True
    ${headers}    Run Keyword If    "${token}" != "None"    Create Dictionary    Content-Type=application/json    Authorization=Bearer ${token}
    ...    ELSE    Create Dictionary    Content-Type=application/json
    ${main_details}    Set Variable    ${EMPTY}
    @{parameters_list_1}    Create List
    @{parameters_list_2}    Create List
    @{parameters_list_3}    Create List
    ${data_list}    Split String    ${client_list}    |
    : FOR    ${item}    IN    @{data_list}
    \    ${items}    Split String    ${item}    ,
    \    ${is_number}    Check If Parameter Is A Number    ${items[1]}
    \    ${main_details}    Set Variable If    "${is_number}" == "True"    ${main_details}"${items[0]}":${items[1]},    ${main_details}"${items[0]}":"${items[1]}",
    ${main_details}    Replace String    ${main_details}    "false"    false
    ${main_details}    Replace String    ${main_details}    "true"    true
    ${main_details}    Replace String    ${main_details}    "0.0"    0
    : FOR    ${item}    IN    @{client_products_list}
    \    ${items}    Split String    ${item}    ,
    \    ${details}    Set Variable    {"productCode":"${items[0]}","subjectToMf":${items[1]},"standard":${items[2]}}
    \    Append To List    ${parameters_list_1}    ${details}
    ${parameters_count_1}    Get Length    ${parameters_list_1}
    : FOR    ${i}    IN RANGE    0    ${parameters_count_1}
    \    ${parameters_1}    Set Variable If    ${i}==0    ${EMPTY}    ${parameters_1},
    \    ${parameters_1}    Set Variable    ${parameters_1}${parameters_list_1[${i}]}
    : FOR    ${item}    IN    @{client_vendors_list}
    \    ${items}    Split String    ${item}    ,
    \    ${details}    Set Variable    {"vendorName":"${items[0]}","percentage":${items[1]},"standard":${items[2]}}
    \    Append To List    ${parameters_list_2}    ${details}
    ${parameters_count_2}    Get Length    ${parameters_list_2}
    : FOR    ${i}    IN RANGE    0    ${parameters_count_2}
    \    ${parameters_2}    Set Variable If    ${i}==0    ${EMPTY}    ${parameters_2},
    \    ${parameters_2}    Set Variable    ${parameters_2}${parameters_list_2[${i}]}
    : FOR    ${item}    IN    @{client_pricings_list}
    \    ${items}    Split String    ${item}    ,
    \    ${details}    Set Variable    {"tripType":"${items[1]}","feeOption":"${items[3]}","group":${items[2]},"cmpid":${items[0]},"transactionFees":[{"feeId":${items[2]},"territoryCodes":["X"],"amount":${${items[2]}_tf_amount_value},"operator":"${${items[2]}_operator_value}","extraAmount":${${items[2]}_extra_amount_value},"perAmount":${${items[2]}_per_amount_value},"minAmount":${${items[2]}_min_amount_value},"maxAmount":${${items[2]}_max_amount_value},"startAmount":${${items[2]}_start_amount_value},"endAmount":${${items[2]}_end_amount_value}}]}
    \    Append To List    ${parameters_list_3}    ${details}
    ${parameters_count_3}    Get Length    ${parameters_list_3}
    : FOR    ${i}    IN RANGE    0    ${parameters_count_3}
    \    ${parameters_3}    Set Variable If    ${i}==0    ${EMPTY}    ${parameters_3},
    \    ${parameters_3}    Set Variable    ${parameters_3}${parameters_list_3[${i}]}
    ${data}    Set Variable    {${main_details}"mfProducts":[${parameters_1}],"mfCcs":[${parameters_2}],"clientPricings":[${parameters_3}]}
    Comment    Create File    ${EXECDIR}/file_with_products_vendors.txt    ${data}
    ${response}    Put Request    client    /apac-services-rest/api/clients    data=${data}    headers=${headers}
    Set Test Variable    ${response}
    Log    ${response.headers}
    Log    ${response.content}
    Set Test Variable    ${api_flag}    client

Update Client To Original Value And Evict Client Cache
    [Arguments]    ${client_list}=${in_client_${client_id}_list}    ${number}=2    ${token}=${default_token}
    Send Put Request For Client    ${client_list}    ${token}
    Evict Client Cache    ${number}    ${token}

Verify Client Are Correctly Retrieved
    [Arguments]    ${client_list}=${in_client_${client_id}_list}
    ${data_list}    Split String    ${client_list}    |
    : FOR    ${item}    IN    @{data_list}
    \    ${items}    Split String    ${item}    ,
    \    Run Keyword And Continue On Failure    Verify Json Value Is Correct    $.${items[0]}    ${items[1]}
    Verify Client Products Are Correctly Retrieved
    Verify Client Vendors Are Correctly Retrieved
    Verify Client Pricings Are Correctly Retrieved
    Verify Client Pricings Transaction Fees Are Correctly Retrieved

Verify Client Are Not Retrieved
    ${response_str}    Decode Bytes To String    ${response.content}     UTF-8    
    Verify String Does Not Contain Substring    ${response_str}    "clientId"
    Verify String Does Not Contain Substring    ${response_str}    "name"
    Verify String Does Not Contain Substring    ${response_str}    "clientAccountNumber"

Verify Client Pricings Are Correctly Retrieved
    ${client_pricings_list_length}    Get Length    ${client_pricings_list}
    : FOR    ${index}    IN RANGE    ${client_pricings_list_length}
    \    ${item_trip_type}    Get Json Value As String    ${response.content}    $.clientPricings.[${index}].tripType
    #    ${item_client_id}    Get Json Value As String    ${response.content}    $.clientPricings.[${index}].clientId
    \    Run Keyword And Continue On Failure    Verify Json Value Is Correct    $.clientPricings.[${index}].group    ${${client_id}_${item_trip_type}_client_pricings_group__value}
    \    Run Keyword And Continue On Failure    Verify Json Value Is Correct    $.clientPricings.[${index}].feeOption    ${${client_id}_${item_trip_type}_client_pricings_fee_option__value}

Verify Client Pricings Transaction Fees Are Correctly Retrieved
    ${client_pricings_list_length}    Get Length    ${client_pricings_list}
    : FOR    ${index}    IN RANGE    ${client_pricings_list_length}
    \    ${item_fee_id}    Get Json Value As String    ${response.content}    $.clientPricings.[${index}].transactionFees.[0].feeId
    \    Run Keyword And Continue On Failure    Verify Json Value Is Correct    $.clientPricings.[${index}].transactionFees.[0].territoryCodes.[0]    ${${item_fee_id}_territory_codes_value}
    \    Run Keyword And Continue On Failure    Verify Json Value Is Correct    $.clientPricings.[${index}].transactionFees.[0].amount    ${${item_fee_id}_tf_amount_value}
    \    Run Keyword And Continue On Failure    Verify Json Value Is Correct    $.clientPricings.[${index}].transactionFees.[0].operator    ${${item_fee_id}_operator_value}
    \    Run Keyword And Continue On Failure    Verify Json Value Is Correct    $.clientPricings.[${index}].transactionFees.[0].extraAmount    ${${item_fee_id}_extra_amount_value}
    \    Run Keyword And Continue On Failure    Verify Json Value Is Correct    $.clientPricings.[${index}].transactionFees.[0].perAmount    ${${item_fee_id}_per_amount_value}
    \    Run Keyword And Continue On Failure    Verify Json Value Is Correct    $.clientPricings.[${index}].transactionFees.[0].minAmount    ${${item_fee_id}_min_amount_value}
    \    Run Keyword And Continue On Failure    Verify Json Value Is Correct    $.clientPricings.[${index}].transactionFees.[0].maxAmount    ${${item_fee_id}_max_amount_value}
    \    Run Keyword And Continue On Failure    Verify Json Value Is Correct    $.clientPricings.[${index}].transactionFees.[0].startAmount    ${${item_fee_id}_start_amount_value}
    \    Run Keyword And Continue On Failure    Verify Json Value Is Correct    $.clientPricings.[${index}].transactionFees.[0].endAmount    ${${item_fee_id}_end_amount_value}

Verify Client Products Are Correctly Retrieved
    ${products_list}    Get Json Value As String    ${response.content}    $.mfProducts
    ${data}    Remove String    ${products_list}    [
    ${data}    Remove String    ${data}    ]
    ${data_list}    Split String    ${data}    },{
    : FOR    ${item}    IN    @{data_list}
    \    ${item}    Remove String    ${item}    "
    \    ${item}    Remove String    ${item}    {
    \    ${item}    Remove String    ${item}    }
    \    ${item}    Replace String    ${item}    :    ,
    \    ${items}    Split String    ${item}    ,
    \    ${subject_mf}    Set Variable If    "${items[2].strip()}" == "subjectToMf"    ${items[3].strip()}    ${items[5].strip()}
    \    ${standard}    Set Variable If    "${items[4].strip()}" == "standard"    ${items[5].strip()}    ${items[3].strip()}
    \    Verify Actual Value Matches Expected Value    ${subject_mf}    ${${items[1]}_products_subject_to_mf__value}
    \    Verify Actual Value Matches Expected Value    ${standard}    ${${items[1]}_products_standard__value}

Verify Client Vendors Are Correctly Retrieved
    ${vendors_list}    Get Json Value As String    ${response.content}    $.mfCcs
    ${data}    Remove String    ${vendors_list}    [
    ${data}    Remove String    ${data}    ]
    ${data_list}    Split String    ${data}    },{
    : FOR    ${item}    IN    @{data_list}
    \    ${item}    Remove String    ${item}    "
    \    ${item}    Remove String    ${item}    {
    \    ${item}    Remove String    ${item}    }
    \    ${item}    Replace String    ${item}    :    ,
    \    ${items}    Split String    ${item}    ,
    \    ${vendor_name}    Set Variable If    "${items[0].strip()}" == "vendorName"    ${items[1]}    ${items[3]}
    \    ${vendor_percentage}    Set Variable If    "${items[2].strip()}" == "percentage"    ${items[3].strip()}    ${items[1].strip()}
    \    Verify Actual Value Matches Expected Value    ${vendor_percentage}    ${${vendor_name}_vendors_percentage__value}
    \    Verify Actual Value Matches Expected Value    ${items[5].strip()}    ${${vendor_name}_vendors_standard__value}