*** Setting ***
Resource          ../../resources/api-imports.txt
Resource          ../../resources/api-utilities.txt
Resource          ../../resources/api-variables.txt

***Keywords***
Append Air Transaction Request Fields
    ${air_transaction_request_list}    Create List
    Run Keyword If    "${airline_code}"!="null"    Append To List    ${air_transaction_request_list}    "airlineCode":"${airline_code}"
    Run Keyword If    "${airline_code}"!="null"    Append To List    ${air_transaction_request_list}    "airlineDescription":"${${airline_code}__airline_description}"
    Run Keyword If    "${cc_vendor_code}"!="null"    Append To List    ${air_transaction_request_list}    "ccVendorCode":"${cc_vendor_code}"
    Run Keyword If    "${cc_vendor_code}"!="null"    Append To List    ${air_transaction_request_list}    "ccVendorName":"${${cc_vendor_code}__cc_description}"
    Run Keyword If    "${cc_type}"!="null"    Append To List    ${air_transaction_request_list}    "ccType":"${cc_type}"
    Run Keyword If    "${client_account_number}"!="null"    Append To List    ${air_transaction_request_list}    "clientAccountNumber":"${client_account_number}"
    Append To List    ${air_transaction_request_list}    "countryCode":"IN"
    Run Keyword If    "${passthrough_type}"!="null"    Append To List    ${air_transaction_request_list}    "passthroughType":"${passthrough_type}"
    Run Keyword If    "${booking_class_list}"!="${EMPTY}"    Append Air Transaction Booking Class Fields    ELSE    Set Test Variable    ${booking_class_request_list}    ${EMPTY}
    Set Test Variable    ${air_transaction_request_list}
    
Append Air Transaction Booking Class Fields
    ${booking_class_request_list}    Create List    
    :FOR    ${booking_class_index}    IN RANGE    0    ${booking_class_list_length}
    \    Append To List   ${booking_class_request_list}    "${booking_class_${booking_class_index}}"         
    Set Test Variable    ${booking_class_request_list}

Create Get Request URL Location
    [Arguments]    ${airline_code}=${airline_code}    ${booking_class}=${booking_class_list}    ${cc_vendor_code}=${cc_vendor_code}    ${cc_type}=${cc_type}    ${client_account_number}=${client_account_number}
    ${url_location_list}    Create List
    Run Keyword If    "${airline_code}"!="null"    Append To List    ${url_location_list}    airlineCode=${airline_code}
    Run Keyword If    "${booking_class}"!="null"    Append To List    ${url_location_list}    bookingClasses=${booking_class}
    Run Keyword If    "${cc_vendor_code}"!="null"    Append To List    ${url_location_list}    ccVendorCode=${cc_vendor_code}
    Run Keyword If    "${cc_type}"!="null"    Append To List    ${url_location_list}    ccType=${cc_type}
    Run Keyword If    "${client_account_number}"!="null"    Append To List    ${url_location_list}    clientAccountNumber=${clientAccountNumber}
    ${url_location_list_length}    Get Length    ${url_location_list}    
    : FOR    ${i}    IN RANGE    0    ${url_location_list_length}
    \    ${url_data_list}    Set Variable If    ${i}==0    ${EMPTY}    ${url_data_list}&
    \    ${url_data_list}    Set Variable    ${url_data_list}${url_location_list[${i}]}
    ${url_data_list}    Set Variable If    "${url_location_list_length}"=="0"    ${EMPTY}    ${url_data_list}
    Set Test Variable    ${url_data_list}    

Create Put Request Body
    Append Air Transaction Request Fields
    ${air_transaction_request_list_length}    Get Length    ${air_transaction_request_list}
    : FOR    ${i}    IN RANGE    0    ${air_transaction_request_list_length}
    \    ${air_transaction_data_list}    Set Variable If    ${i}==0    ${EMPTY}    ${air_transaction_data_list},
    \    ${air_transaction_data_list}    Set Variable    ${air_transaction_data_list}${air_transaction_request_list[${i}]}
    ${air_transaction_data_list}    Set Variable If    "${air_transaction_request_list_length}"=="0"    ${EMPTY}    ${air_transaction_data_list}
    ${booking_class_request_list_length}    Get Length    ${booking_class_request_list}
    : FOR    ${i}    IN RANGE    0    ${booking_class_request_list_length}
    \    ${booking_class_data_list}    Set Variable If    ${i}==0    ${EMPTY}    ${booking_class_data_list},
    \    ${booking_class_data_list}    Set Variable    ${booking_class_data_list}${booking_class_request_list[${i}]}
    ${booking_class_data_list}    Set Variable If    "${booking_class_request_list_length}"=="0"    ${EMPTY}    ${booking_class_data_list}
    ${data}    Set Variable If    "${booking_class_list}"!="${EMPTY}"    {${air_transaction_data_list},"bookingClasses":[${booking_class_data_list}]}
    Set Test Variable    ${data}
    Log    ${data}

Create Test Variable For Air Transaction
    [Arguments]    ${data_list}    ${consumer}=market
    ${air_transaction_list}    Create List
    ${data_list}    Split String    ${data_list}    |
    ${data_list_length}    Get Length    ${data_list}
    :FOR    ${data}    IN    @{data_list}
    \    ${data}    Split String    ${data}    ;
    \    Create Test Variables For Air Transaction Main Fields    main_data_list=${data[0]}
    \    Run Keyword If    "${data[1]}"!="null"    Create Test Variables For Air Transaction Booking Class Fields    booking_data_list=${data[1]}    ELSE    Run Keywords    Set Test Variable    ${booking_class_list}    null    AND    Set Test Variable    ${booking_class_list_length}    0
    \    Run Keyword If    "${consumer}"=="maintenance"    Append To List    ${air_transaction_list}    ${airline_code},${${airline_code}_airline_description},${cc_vendor_code},${cc_type},${passthrough_type},${client_account_number},${booking_class_list}
    \    Log    ${air_transaction_list}        
    Set Test Variable    ${air_transaction_records_length}    ${data_list_length}
    Set Test Variable    ${air_transaction_list}

Create Test Variables For Air Transaction Main Fields
    [Arguments]    ${main_data_list}
    ${air_transaction_list_data}    Split String    ${main_data_list}    ,
    Set Test Variable    ${airline_code}    ${air_transaction_list_data[0]}
    Set Test Variable    ${cc_vendor_code}    ${air_transaction_list_data[1]}
    Set Test Variable    ${cc_type}    ${air_transaction_list_data[2]}
    Set Test Variable    ${client_account_number}    ${air_transaction_list_data[3]}
    Set Test Variable    ${passthrough_type}    ${air_transaction_list_data[4]}

Create Test Variables For Air Transaction Booking Class Fields
    [Arguments]    ${booking_data_list}
    ${booking_class_list}    Create List
    ${booking_class_list_data}    Split String    ${booking_data_list}    ,
    ${booking_class_list_length}    Get Length    ${booking_class_list_data}
    ${booking_class_index}    Set Variable    0
    :FOR    ${data}    IN    @{booking_class_list_data}
    \    Set Test Variable    ${booking_class}    ${data}
    \    Set Test Variable    ${booking_class_${booking_class_index}}    ${data}
    \    Set Test Variable    ${booking_class_description_${booking_class_index}}    ${${data}_rbd_description}
    \    ${booking_class_list}    Set Variable If    "${booking_class_index}"!="0"    ${booking_class_list},${booking_class}    ${booking_class}
    \    ${booking_class_index}    Evaluate    ${booking_class_index}+1
    Set Test Variable    ${booking_class_list}
    Set Test Variable    ${booking_class_list_length}

Delete Created Air Transaction And Evict Cache
    [Arguments]    ${number}=3    ${token}=${default_token}
    :FOR    ${data}    IN    @{id_list}
    \    Send Air Transaction Delete Request (Maintenance)    token=${token}    id=${data}
    \    Evict Air Transaction Cache    token=${token}    number=${number}

Evict Air Transaction Cache
    [Arguments]    ${number}=3    ${token}=${default_token}
    Create Session    air-transactions    ${${env}_base_url}    verify=True
    ${headers}    Run Keyword If    "${token}" != "None"    Create Dictionary    Content-Type=application/json    Authorization=Bearer ${token}
    ...    ELSE    Create Dictionary    Content-Type=application/json
    : FOR    ${index}    IN RANGE    0    ${number}
    \    ${response}    Get Request    air-transactions    /apac-services-rest/api/caches/evict/air-transactions    headers=${headers}
    \    Set Test Variable    ${response}
    \    Verify Response Status Code Is Correct    200
    \    Log    ${response.headers}
    \    Log    ${response.content}
    Set Test Variable    ${api_flag}    air-transactions

Generate Suite Variables For Air Transaction
    [Arguments]    ${cc_vendor_data_list}    ${rbd_data_list}    ${airline_data_list}
    ${vendor_list}    Create List
    ${data_list}    Split String    ${cc_vendor_data_list}    |
    :FOR    ${data}    IN    @{data_list}
    \    Log    ${data}
    \    ${data_item}    Split String    ${data}    ,
    \    Set Suite Variable    ${${data_item[0]}_cc_description}    ${data_item[1]}
    \    Append To List    ${vendor_list}    ${data_item[0]}
    Set Suite Variable    ${vendor_list}
    Log    ${vendor_list}
    ${data_list}    Split String    ${rbd_data_list}    |
    ${rbd_list}    Create List
    :FOR    ${data}    IN    @{data_list}
    \    ${data_item}    Split String    ${data}    ,
    \    Set Suite Variable    ${${data_item[0]}_rbd_description}    ${data_item[1]}
    \    Append To List    ${rbd_list}    ${data_item[0]}
    Set Suite Variable    ${rbd_list}
    Log    ${rbd_list}
    ${data_list}    Split String    ${airline_data_list}    |
    ${airline_list}    Create List
    :FOR    ${data}    IN    @{data_list}
    \    ${data_item}    Split String    ${data}    ,
    \    Set Suite Variable    ${${data_item[0]}_airline_description}    ${data_item[1]}
    \    Append To List    ${airline_list}    ${data_item[0]}
    Set Suite Variable    ${airline_list}
    Log    ${airline_list}
    
Send Air Transaction Delete Request (Maintenance)
    [Arguments]    ${token}=${default_token}    ${id}=${actual_id}
    Create Session    air-transactions    ${${env}_base_url}    verify=True
    ${headers}    Run Keyword If    "${token}" != "None"    Create Dictionary    Content-Type=application/json    Authorization=Bearer ${token}
    ...    ELSE    Create Dictionary    Content-Type=application/json
    ${response}    Delete Request    air-transactions    /apac-services-rest/api/air-transactions?id=${id}    headers=${headers}
    Set Test Variable    ${response}
    Log    ${response.headers}
    Log    ${response.content}
    Set Test Variable    ${api_flag}    air-transactions
    
Send Air Transaction Get Request
    [Arguments]    ${token}=${default_token}    ${airline_code}=${airline_code}    ${booking_class}=${booking_class_list}    ${cc_vendor_code}=${cc_vendor_code}    ${cc_type}=${cc_type}    ${client_account_number}=${client_account_number}
    Create Session    air-transaction    ${${env}_base_url}    verify=True
    ${headers}    Run Keyword If    "${token}" != "None"    Create Dictionary    Content-Type=application/json    Authorization=Bearer ${token}
    ...    ELSE    Create Dictionary    Content-Type=application/json
    Create Get Request URL Location    airline_code=${airline_code}    booking_class=${booking_class}    cc_vendor_code=${cc_vendor_code}    cc_type=${cc_type}    client_account_number=${client_account_number}
    ${response}    Get Request    air-transaction    /apac-services-rest/api/air-transactions?${url_data_list}    headers=${headers}
    Set Test Variable    ${response}
    Log    ${response.headers}
    Log    ${response.content}
    Set Test Variable    ${api_flag}    air-transaction
    
Send Air Transaction Get Request (Maintenance)
    [Arguments]    ${token}=${default_token}    ${airline_code}=${airline_code}    ${client_account_number}=${EMPTY}
    Create Session    air-transactions    ${${env}_base_url}    verify=True
    ${headers}    Run Keyword If    "${token}" != "None"    Create Dictionary    Content-Type=application/json    Authorization=Bearer ${token}
    ...    ELSE    Create Dictionary    Content-Type=application/json
    Create Get Request URL Location    client_account_number=${client_account_number}    airline_code=null    booking_class=null    cc_vendor_code=null    cc_type=null
    ${response}    Get Request    air-transactions    /apac-services-rest/api/air-transactions/${airline_code}?${url_data_list}    headers=${headers}
    Set Test Variable    ${response}
    Log    ${response.headers}
    Log    ${response.content}
    Set Test Variable    ${api_flag}    air-transactions

Send Air Transaction Put Request (Maintenance)
    [Arguments]    ${token}=${default_token}
    Create Session    air-transactions    ${${env}_base_url}    verify=True
    ${headers}    Run Keyword If    "${token}" != "None"    Create Dictionary    Content-Type=application/json    Authorization=Bearer ${token}
    ...    ELSE    Create Dictionary    Content-Type=application/json
    Create Put Request Body    
    ${response}    Put Request    air-transactions    /apac-services-rest/api/air-transactions    data=${data}    headers=${headers}
    Set Test Variable    ${response}
    Log    ${response.headers}
    Log    ${response.content}
    Set Test Variable    ${api_flag}    air-transactions

Verify Air Transaction Passthrough Type Is Retrieved Correctly
    Verify Json Value Is Correct    $.passthroughType    ${passthrough_type}     
    
Verify Air Transaction Passthrough Type Is Not Retrieved
    Verify String Does Not Contain Substring    ${response.text}    "passthroughType"      
    
Verify Air Transaction Record Is Retrieved Correctly
    ${record_matched}    Set Variable    0
    ${data_list}    To Json    ${response.content}
    ${response_length}    Get Length    ${data_list}
    :FOR    ${index}    IN RANGE    0    ${response_length}
    \    ${actual_airline_code}    Get Json Value As String    ${response.content}    $.[${index}].airlineCode
    \    ${actual_airline_description}    Get Json Value As String    ${response.content}    $.[${index}].airlineDescription
    \    ${actual_cc_vendor_code}    Get Json Value As String    ${response.content}    $.[${index}].ccVendorCode
    \    ${actual_cc_type}    Get Json Value As String    ${response.content}    $.[${index}].ccType
    \    ${actual_passthrough_type}    Get Json Value As String    ${response.content}    $.[${index}].passthroughType
    \    ${booking_class_exists}    Run Keyword And Return Status    Verify Json Element Exists    $.[${index}].bookingClasses
    \    ${actual_booking_class}    Run Keyword If    "${booking_class_exists}"=="True"    Get Json Value As String    ${response.content}    $.[${index}].bookingClasses    ELSE    Set Variable    null
    \    ${actual_booking_class}    Remove String    ${actual_booking_class}    "
    \    ${actual_booking_class}    Remove String    ${actual_booking_class}    ${SPACE}
    \    ${client_account_number_exists}    Run Keyword And Return Status    Verify Json Element Exists    $.[${index}].clientAccountNumber
    \    ${actual_client_account_number}    Run Keyword If    "${client_account_number_exists}"=="True"    Get Json Value As String    ${response.content}    $.[${index}].clientAccountNumber    ELSE    Set Variable    null
    \    ${actual_air_transaction}    Set Variable    ${actual_airline_code},${actual_airline_description},${actual_cc_vendor_code},${actual_cc_type},${actual_passthrough_type},${actual_client_account_number},${actual_booking_class}
    \    ${record_was_matched}    Run Keyword And Return Status    List Should Contain Value    ${air_transaction_list}    ${actual_air_transaction}
    \    ${record_matched}    Run Keyword If    "${record_was_matched}"=="True"    Evaluate    ${record_matched}+1    ELSE    Set Variable    ${record_matched} 
    \    Verify Json Value Is Correct    $.[${index}].ccVendorName    ${${actual_cc_vendor_code}_cc_description}
    \    Verify Json Element Exists    $.[${index}].id   
    Verify Actual Value Matches Expected Value    ${air_transaction_records_length}    ${record_matched}        

Verify Air Transaction Record Is Not Retrieved
    Verify String Does Not Contain Substring    ${response.text}    "airlineCode"
    Verify String Does Not Contain Substring    ${response.text}    "airlineDescription"
    Verify String Does Not Contain Substring    ${response.text}    "ccVendorCode"
    Verify String Does Not Contain Substring    ${response.text}    "ccVendorName"
    Verify String Does Not Contain Substring    ${response.text}    "countryCode"
    Verify String Does Not Contain Substring    ${response.text}    "ccType"
    Verify String Does Not Contain Substring    ${response.text}    "passthroughType"
    Verify String Does Not Contain Substring    ${response.text}    "id"
    Verify String Does Not Contain Substring    ${response.text}    "bookingClass"

Verify Air Transaction Record Is Saved Correctly
    ${id_list_exists}    Run Keyword And Return Status    Variable Should Exist    ${id_list}
    ${id_list}    Run Keyword If    "${id_list_exists}"=="True"    Set Variable    ${id_list}    ELSE    Create List
    Verify Json Element Exists    $.id
    ${actual_id}    Get Json Value As String    ${response.content}    $.id
    Append To List    ${id_list}    ${actual_id}
    Set Test Variable    ${actual_id}
    Set Test Variable    ${id_list}
    Verify Json Value Is Correct    $.airlineCode    ${airline_code}
    Verify Json Value Is Correct    $.airlineDescription    ${${airline_code}_airline_description}
    Verify Json Value Is Correct    $.ccVendorCode    ${cc_vendor_code}
    Verify Json Value Is Correct    $.ccVendorName    ${${cc_vendor_code}_cc_description}
    Verify Json Value Is Correct    $.countryCode    IN
    Verify Json Value Is Correct    $.ccType    ${cc_type}
    Verify Json Value Is Correct    $.passthroughType    ${passthrough_type}
    Run Keyword If    "${client_account_number}"!="null"    Verify Json Value Is Correct    $.clientAccountNumber    ${client_account_number}    ELSE    Verify Json Element Does Not Exist    $.clientAccountNumber
    : FOR    ${booking_class_index}    IN RANGE    0    ${booking_class_list_length}
    \    Verify Json Value Is Correct    $.bookingClasses.[${booking_class_index}]   ${booking_class_${booking_class_index}}


     