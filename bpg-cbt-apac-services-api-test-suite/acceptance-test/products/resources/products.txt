*** Settings ***
Library           OperatingSystem
Resource    ../../resources/api-imports.txt
Resource    ../../resources/api-utilities.txt
Resource    ../../resources/api-variables.txt

*** Keywords ***
Create New Product List
    [Arguments]    ${product_number}
    ${all_product_list_length}    Get Length    ${all_product_list}
    ${index}    Set Variable    ${all_product_list_length}    
    @{product_list}    Create List
    @{vendor_list}    Create List
    Set Test Variable    ${${product_number}_list}    ${product_list}
    Set Test variable    ${product_list_${index}}    ${${product_number}_list}
    Append To List    ${all_product_list}    ${product_number}
    Set Test Variable    ${index}    
    Set Test Variable    ${all_product_list}
    Set Test Variable    ${${product_number}_vendor_list}    ${vendor_list}

Create Test Variables For Products And Vendors
    [Arguments]    ${country}
    @{all_product_list}    Create List
    @{product_remarks_list}    Create List
    Set Test Variable    ${all_product_list}
    Set Test Variable    ${product_remarks_list}
    ${data_list_1}    Split String    ${${country}_data_list_1}    |
    : FOR    ${data}    IN    @{data_list_1}
    \    ${character}    Run Keyword If    "${country}"=="in"    Set Variable    _    ELSE    Set Variable    ,        
    \    ${data_item}    Split String    ${data}    ${character}
    \    ${data_type}    Get Substring    ${data_item[0]}    0    3
    \    ${item_number}    Get Substring    ${data_item[0]}    3
    \    ${data_type}    Set Variable If    "${data_type.upper()}"=="PRO"    product    vendor
    \    Set Test Variable    ${${data_type}_code_${item_number}}    ${data_item[1]}
    \    Run Keyword If    "${data_type}"=="product" and "${country}"!="in"    Set Test Variable    ${${data_type}_type_${item_number}}    ${data_item[2]}
    ${data_list_2}    Split String    ${${country}_data_list_2}    |
    : FOR    ${data}    IN    @{data_list_2}
    \    ${data_item}    Split String    ${data}    ,
    \    ${product_number}    Get Substring    ${data_item[0]}    3
    \    ${vendor_number}    Get Substring    ${data_item[1]}    3
    \    ${is_list_created}    Run Keyword And Return Status    Variable Should Exist    ${${product_number}_list}
    \    Run Keyword If    "${is_list_created}"=="False"    Create New Product List    ${product_number}    
    \    Append To List    ${product_list_${index}}    ${vendor_number}
    \    Append To List    ${${product_number}_vendor_list}    ${vendor_number}
    \    Log    ${${product_number}_vendor_list}
    \    Set Test Variable    ${${product_number}_vendor_list}
    : FOR    ${item}    IN RANGE    0    ${index}+1
    \    Set Test Variable    ${product_list_${item}}
    \    Log    ${product_list_${item}}
    Run Keyword If    "${country}"!="in"    Create Test Data For Vendor Raise Type    ${country}
    Set Test Variable    ${country}    ${country.upper()}
    Set Test Variable    ${all_product_list}
    
Create Test Variables For Vendor Data
    [Arguments]    ${country}
    ${data_list}    Split String    ${${country}_vendor_data_list}    |
    :FOR    ${data}    IN    @{data_list}
    \    ${data_item}    Split String    ${data}    ^
    \    ${vendor_code}    Set Variable    ${data_item[1]}
    \    Set Test Variable    ${${vendor_code}_name}    ${data_item[2]}
    \    Set Test Variable    ${${vendor_code}_sort_key}    ${data_item[3]}
    \    Set Test Variable    ${${vendor_code}_address_1}    ${data_item[4]}
    \    Set Test Variable    ${${vendor_code}_address_2}    ${data_item[5]}
    \    Set Test Variable    ${${vendor_code}_city}    ${data_item[6]}
    \    Set Test Variable    ${${vendor_code}_country}    ${data_item[7]}
    \    Set Test Variable    ${${vendor_code}_misc}    ${data_item[8]}
    \    Set Test Variable    ${${vendor_code}_contact_info_count}    ${data_item[10]}
    \    Set Test Variable    ${${vendor_code}_contact_info_fax}    ${data_item[11]}
    \    Set Test Variable    ${${vendor_code}_contact_info_email}    ${data_item[12]}
    \    Set Test Variable    ${${vendor_code}_contact_info_phone}    ${data_item[13]}
    \    Run Keyword If    "${country.upper()}" == "HK"    Set Test Variable    ${${vendor_code}_credit_terms}    ${data_item[14]}

Create Test Variables For Vendor Data India
    [Arguments]    ${country}
    ${data_list}    Split String    ${${country}_vendor_data_list}    |
    :FOR    ${data}    IN    @{data_list}
    \    ${data_item}    Split String    ${data}    ^
    \    ${vendor_code}    Set Variable    ${data_item[0]}
    \    Set Test Variable    ${${vendor_code}_name}    ${data_item[1]}
    \    Set Test Variable    ${${vendor_code}_address_1}    ${data_item[2]}
    \    Set Test Variable    ${${vendor_code}_address_2}    ${data_item[3]}
    \    Set Test Variable    ${${vendor_code}_city}    ${data_item[4]}
    \    Set Test Variable    ${${vendor_code}_country}    ${data_item[5]}
    \    Set Test Variable    ${${vendor_code}_misc}    ${data_item[6]}
    \    Set Test Variable    ${${vendor_code}_contact_info_count}    ${data_item[7]}
    \    Set Test Variable    ${${vendor_code}_contact_info_type}    ${data_item[8]}
    \    Set Test Variable    ${${vendor_code}_contact_info_type_index}    ${data_item[9]}
    \    Set Test Variable    ${${vendor_code}_contact_info_${${vendor_code}_contact_info_type_index.strip()}}    ${data_item[10]}
    \    Set Test Variable    ${${vendor_code}_contact_person}    ${data_item[11]}
    \    Set Test Variable    ${${vendor_code}_contact_info_preferred}    ${data_item[12]}

Create Test Data For Vendor Raise Type
    [Arguments]    ${country}
    ${data_list}    Split String    ${${country}_raise_type_list}    |
    : FOR    ${data}    IN    @{data_list}
    \    ${data_item}    Split String    ${data}    ,
    \    ${item_number}    Get Substring    ${data_item[0]}    3
    \    Set Test Variable    ${raise_type_${item_number}}    ${data_item[1]}
    
Send Product Get Request
    [Arguments]    ${token}=${default_token}    ${country}=${country}
    Create Session    product    ${${env}_base_url}    verify=True
    ${headers}    Run Keyword If    "${token}" != "None"    Create Dictionary    Content-Type=application/json    Authorization=Bearer ${token}
    ...    ELSE    Create Dictionary    Content-Type=application/json
    ${response}    Get Request    product    /apac-services-rest/api/products/${country}    headers=${headers}
    Set Test Variable    ${response}
    Log    ${response.headers}
    Log    ${response.content}
    Set Test Variable    ${api_flag}    products
    
Verify Decoded Json Value Is Correct
    [Arguments]    ${json_path}    ${expected_value}    ${data_type}=string    ${handle_null}=true
    Log    Json Object: ${json_path}
    Log    Expected Value: ${expected_value}
    ${expected_value}    Set Variable If    "${data_type}" == "array"    [${expected_value}]    ${expected_value}
    ${expected_value}    Convert To String    ${expected_value}
    ${expected_value}    Run Keyword If    "${handle_null}" == "true"    Replace String    ${expected_value}    "null"    null
    ...    ELSE    Set Variable    ${expected_value}
    ${expected_value}    Run Keyword If    "${handle_null}" == "true"    Replace String    ${expected_value}    [null]    null
    ...    ELSE    Set Variable    ${expected_value}
    ${actual_value}    Get Json Value As String    ${response.content}    ${json_path}
    ${actual_value}    Replace String    ${actual_value}    \\u2013    –
    ${actual_value}    Replace String    ${actual_value}    \\u2018    ‘
    ${actual_value}    Replace String    ${actual_value}    \\u2019    ‘
    ${actual_value}    Replace String    ${actual_value}    ${SPACE}${SPACE}    ${SPACE}     
    Run Keyword And Continue On Failure    Should Be Equal As Strings    ${actual_value.rstrip()}    ${expected_value.rstrip()}

Verify Json Value For India Is Correct
    [Arguments]    ${json_path}    ${expected_value}    ${data_type}=string    ${handle_null}=true
    Log    Json Object: ${json_path}
    Log    Expected Value: ${expected_value}
    ${expected_value}    Set Variable If    "${data_type}" == "array"    [${expected_value}]    ${expected_value}
    ${expected_value}    Convert To String    ${expected_value}
    ${expected_value}    Run Keyword If    "${handle_null}" == "true"    Replace String    ${expected_value}    "null"    null
    ...    ELSE    Set Variable    ${expected_value}
    ${expected_value}    Run Keyword If    "${handle_null}" == "true"    Replace String    ${expected_value}    [null]    null
    ...    ELSE    Set Variable    ${expected_value}
    ${actual_value}    Get Json Value As String    ${response.content}    ${json_path}
    ${actual_value}    Replace String    ${actual_value}    ${SPACE}    ${EMPTY}
    ${actual_value}    Replace String    ${actual_value}    \\n    ${EMPTY}
    ${actual_value}    Replace String    ${actual_value}    "    ${EMPTY}
    ${actual_value}    Replace String    ${actual_value}    \\    ${EMPTY}
    ${actual_value}    Replace String    ${actual_value}    \\u00a0    ${EMPTY}
    ${actual_value}    Replace String    ${actual_value}    u00a0    ${EMPTY}  
    ${actual_value}    Replace String    ${actual_value}    Taj-    ${EMPTY}
    ${expected_value}    Replace String    ${expected_value}    ${SPACE}    ${EMPTY}   
    Run Keyword And Continue On Failure    Should Be Equal As Strings    ${actual_value}    ${expected_value}

Verify Products And Vendors Are Not Retrieved
    Verify String Does Not Contain Substring    ${response.content}    "vendors"
    Verify String Does Not Contain Substring    ${response.content}    "countryCode"
    Verify String Does Not Contain Substring    ${response.content}    "productCode"
    Verify String Does Not Contain Substring    ${response.content}    "description"
    Verify String Does Not Contain Substring    ${response.content}    "enableCCFOP"
    Verify String Does Not Contain Substring    ${response.content}    "gst"
    Verify String Does Not Contain Substring    ${response.content}    "mi"
    Verify String Does Not Contain Substring    ${response.content}    "sortKey"
    Verify String Does Not Contain Substring    ${response.content}    "tktNo"
    Verify String Does Not Contain Substring    ${response.content}    "tktPrefix"
    Verify String Does Not Contain Substring    ${response.content}    "type"

Verify Products And Vendors Are Retrieved Correctly
    Comment    Create File    ${EXECDIR}/file_with_products_vendors.txt    ${response.content}
    ${all_product_list_length}    Get Length    ${all_product_list}
    : FOR    ${index}    IN RANGE    ${all_product_list_length}
    \    ${item_product_code}    Get Json Value As String    ${response.content}    $.[${index}].productCode
    \    Verify Json Value Is Correct    $[${index}].description    ${product_code_${item_product_code}}
    \    Verify Vendors Are Retrieved Correctly    ${index}    ${product_list_${index}}
    ${index}    Evaluate    ${index}+1
    Verify Json Element Does Not Exist    $[${index}].description

Verify Vendors Are Retrieved Correctly
    [Arguments]    ${index}    ${item_vendor_list}
    ${item_vendor_list_length}    Get Length    ${item_vendor_list}
    ${vendor_index}    Set Variable    0
    :FOR    ${vendor_index}    IN RANGE    ${item_vendor_list_length}
    \    ${list_item}    Get From List    ${item_vendor_list}    ${vendor_index}
    \    Verify Json Value Is Correct    $[${index}].vendors.[${vendor_index}].code    ${list_item}
    \    Verify Json Value Is Correct    $[${index}].vendors.[${vendor_index}].name    ${vendor_code_${list_item}}   
    \    Run Keyword If    "${country}"!="IN"    Verify Vendor Raise Type Is Retrieved Correctly    ${index}    ${list_item}    ${vendor_index}
    \    ${vendor_index}    Evaluate    ${vendor_index}+1
    Verify Json Element Does Not Exist    $[${index}].vendors.[${vendor_index}].vendorName

Verify Vendors Details Are Retrieved Correctly
    ${all_product_list_length}    Get Length    ${all_product_list}
    : FOR    ${index}    IN RANGE    ${all_product_list_length}
    \    ${item_product_code}    Get Json Value As String    ${response.content}    $.[${index}].productCode
    \    Run Keyword If    "${country.upper()}" != "IN"    Verify Vendor Details Are Retrieved Correctly    ${index}    ${${item_product_code}_vendor_list}    ELSE    Verify Vendor Details India Are Retrieved Correctly    ${index}    ${${item_product_code}_vendor_list}

Verify Vendor Details Are Retrieved Correctly
    [Arguments]    ${product_index}    ${product_vendor_list}
    @{temp_vendor_list}    Create List    
    ${vendor_list_length}    Get Length    ${product_vendor_list}
    ${response_vendor_list}    Get Json Value As String    ${response.content}    $.[${product_index}].vendors.[*].code
    ${response_vendor_list}    Remove String    ${response_vendor_list}    "
    ${split_vendor_list}    Split String    ${response_vendor_list}    ,
    : FOR    ${data}    IN    @{split_vendor_list}
    \    Append To List    ${temp_vendor_list}    ${data.strip()}
    \    Set Test Variable    ${temp_vendor_list}
    \    Log    ${temp_vendor_list}
    Run Keyword And Continue On Failure    Lists Should Be Equal    ${product_vendor_list}    ${temp_vendor_list}
    : FOR    ${vendor_index}    IN RANGE    ${vendor_list_length}
    \    ${item_vendor_code}    Get Json Value As String    ${response.content}    $.[${product_index}].vendors[${vendor_index}].code
    \    Verify Json Value Is Correct    $[${product_index}].vendors.[${vendor_index}].name    ${${item_vendor_code}_name}
    \    Verify Json Value Is Correct    $[${product_index}].vendors.[${vendor_index}].sortKey    ${${item_vendor_code}_sort_key}
    \    Run Keyword If    "${${item_vendor_code}_address_1}"!="NULL"    Verify Decoded Json Value Is Correct    $[${product_index}].vendors.[${vendor_index}].address1    ${${item_vendor_code}_address_1}
    \    Run Keyword If    "${${item_vendor_code}_address_2}"!="NULL"    Verify Decoded Json Value Is Correct    $[${product_index}].vendors.[${vendor_index}].address2    ${${item_vendor_code}_address_2}
    \    Run Keyword If    "${${item_vendor_code}_city}"!="NULL"    Verify Json Value Is Correct    $[${product_index}].vendors.[${vendor_index}].city    ${${item_vendor_code}_city}
    \    Run Keyword If    "${${item_vendor_code}_country}"!="NULL"    Verify Json Value Is Correct    $[${product_index}].vendors.[${vendor_index}].country    ${${item_vendor_code}_country}
    \    Verify Json Value Is Correct    $[${product_index}].vendors.[${vendor_index}].misc    ${${item_vendor_code}_misc.lower()}
    \    Run Keyword If    ${${item_vendor_code}_contact_info_count}>0    Verify Vendor Details Contact Info Are Retrieved Correctly    ${product_index}    ${vendor_index}    ${item_vendor_code}
    \    Run Keyword If    "${country.upper()}" == "HK"    Run Keyword If    "${${item_vendor_code}_credit_terms}"!="NULL"    Verify Json Value Is Correct    $[${product_index}].vendors.[${vendor_index}].creditTerms    ${${item_vendor_code}_credit_terms}     

Verify Vendor Details Contact Info Are Retrieved Correctly
    [Arguments]    ${product_index}    ${vendor_index}    ${item_vendor_code}
    : FOR    ${ci_index}    IN RANGE    ${${item_vendor_code}_contact_info_count}
    \    ${item_contact_info_type}    Get Json Value As String    ${response.content}    $[${product_index}].vendors.[${vendor_index}].contactInfo.[${ci_index}].type
    \    Verify Json Value Is Correct    $[${product_index}].vendors.[${vendor_index}].contactInfo.[${ci_index}].detail    ${${item_vendor_code}_contact_info_${item_contact_info_type.lower()}}
    \    Verify Json Value Is Correct    $[${product_index}].vendors.[${vendor_index}].contactInfo.[${ci_index}].preferred    true

Verify Vendor Details Contact Info India Are Retrieved Correctly
    [Arguments]    ${product_index}    ${vendor_index}    ${item_vendor_code}
    : FOR    ${ci_index}    IN RANGE    ${${item_vendor_code}_contact_info_count}
    \    ${item_contact_info_type}    Get Json Value As String    ${response.content}    $[${product_index}].vendors.[${vendor_index}].contactInfo.[${ci_index}].type
    \    Verify Json Value Is Correct    $[${product_index}].vendors.[${vendor_index}].contactInfo.[${ci_index}].detail    ${${item_vendor_code}_contact_info_${item_contact_info_type}${ci_index}}
    \    Verify Json Value Is Correct    $[${product_index}].vendors.[${vendor_index}].contactInfo.[${ci_index}].preferred    ${${item_vendor_code}_contact_info_preferred.lower()}

Verify Vendor Details India Are Retrieved Correctly
    [Arguments]    ${product_index}    ${product_vendor_list}
    @{temp_vendor_list}    Create List    
    ${vendor_list_length}    Get Length    ${product_vendor_list}
    ${response_vendor_list}    Get Json Value As String    ${response.content}    $.[${product_index}].vendors.[*].code
    ${response_vendor_list}    Remove String    ${response_vendor_list}    "
    ${split_vendor_list}    Split String    ${response_vendor_list}    ,
    : FOR    ${data}    IN    @{split_vendor_list}
    \    Append To List    ${temp_vendor_list}    ${data.strip()}
    \    Set Test Variable    ${temp_vendor_list}
    \    Log    ${temp_vendor_list}
    Run Keyword And Continue On Failure    Lists Should Be Equal    ${product_vendor_list}    ${temp_vendor_list}
    : FOR    ${vendor_index}    IN RANGE    ${vendor_list_length}
    \    ${item_vendor_code}    Get Json Value As String    ${response.content}    $.[${product_index}].vendors[${vendor_index}].code
    \    Verify Json Value For India Is Correct    $[${product_index}].vendors.[${vendor_index}].name    ${${item_vendor_code}_name}
    \    Run Keyword If    "${${item_vendor_code}_address_1}"!="NULL"    Verify Json Value For India Is Correct    $[${product_index}].vendors.[${vendor_index}].address1    ${${item_vendor_code}_address_1}
    \    Run Keyword If    "${${item_vendor_code}_address_2}"!="NULL"    Verify Json Value For India Is Correct    $[${product_index}].vendors.[${vendor_index}].address2    ${${item_vendor_code}_address_2}
    \    Run Keyword If    "${${item_vendor_code}_city}"!="NULL"    Verify Json Value For India Is Correct    $[${product_index}].vendors.[${vendor_index}].city    ${${item_vendor_code}_city}
    \    Run Keyword If    "${${item_vendor_code}_country}"!="NULL"    Verify Json Value For India Is Correct    $[${product_index}].vendors.[${vendor_index}].country    ${${item_vendor_code}_country}
    \    Verify Json Value For India Is Correct    $[${product_index}].vendors.[${vendor_index}].misc    ${${item_vendor_code}_misc.lower()}
    \    Run Keyword If    ${${item_vendor_code}_contact_info_count}>0    Verify Vendor Details Contact Info India Are Retrieved Correctly    ${product_index}    ${vendor_index}    ${item_vendor_code}
    \    Run Keyword If    "${${item_vendor_code}_contact_person}"!="NULL"    Verify Json Value For India Is Correct    $[${product_index}].vendors.[${vendor_index}].contactPerson    ${${item_vendor_code}_contact_person}

Verify Vendor Raise Type Is Retrieved Correctly
    [Arguments]    ${index}    ${list_item}    ${vendor_index}
    Run Keyword If    "${raise_type_${list_item}}"!="NULL"    Verify Json Value Is Correct    $[${index}].vendors.[${vendor_index}].raiseType    ${raise_type_${list_item}}    ELSE IF    "${country}"!="IN" and "${raise_type_${list_item}}"=="NULL"    Verify Json Element Does Not Exist    $[${index}].vendors.[${vendor_index}].raiseType