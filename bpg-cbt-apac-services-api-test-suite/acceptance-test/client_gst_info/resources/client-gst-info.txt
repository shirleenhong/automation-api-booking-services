*** Setting ***
Resource          ../../resources/api-imports.txt
Resource          ../../resources/api-utilities.txt
Resource          ../../resources/api-variables.txt
Resource          client-gst-info-list.txt

*** Keywords ***  
Create Test Variables For Client GST Info
    [Arguments]    ${item}
    ${client_gst_list}    Convert To String    ${client_gst_list_${item}}
    ${client_gst_list}    Remove String    ${client_gst_list}    \\032\\032
    log    ${client_gst_list}
    ${client_gst_list}    Split String    ${client_gst_list}    ^
    ${client_gst_list_length}    Get Length    ${client_gst_list}
    Set Test Variable    ${client_gst_list_length}
    Set Test Variable    ${client_gst_list}
    : FOR    ${index}    IN RANGE    0    ${client_gst_list_length}
    \    log    ${client_gst_list[${index}]}
    \    ${data_item}    Split String    ${client_gst_list[${index}]}    ; 
    \    Set Test Variable    ${gstin_${index}}    ${data_item[0]}
    \    Set Test Variable    ${client_entity_name_${index}}    ${data_item[1]}
    \    Set Test Variable    ${client_${index}}    ${data_item[2]}
    \    Set Test Variable    ${business_phone_number_${index}}    ${data_item[3]}
    \    Set Test Variable    ${business_email_add_${index}}    ${data_item[4]}
    \    Set Test Variable    ${entity_address1_${index}}    ${data_item[5]}
    \    Set Test Variable    ${entity_address2_${index}}    ${data_item[6]}
    \    Set Test Variable    ${postal_code_${index}}    ${data_item[7]}
    \    Set Test Variable    ${city_${index}}    ${data_item[8]}
    \    Set Test Variable    ${state_${index}}    ${data_item[9]}

Create Test Variables For Client GSTN Entity Indicator 
    [Arguments]    ${item}
    ${client_gst_list}    Split String    ${client_gst_list_${item}}    ^
    ${client_gst_list_length}    Get Length    ${client_gst_list}
    Set Test Variable    ${client_gst_list_length}
    Set Test Variable    ${client_gst_list}
    : FOR    ${index}    IN RANGE    0    ${client_gst_list_length}
    \    log    ${client_gst_list[${index}]}
    \    ${data_item}    Split String    ${client_gst_list[${index}]}    ; 
    \    Set Test Variable    ${gstin_${index}}    ${data_item[0]}
    \    Set Test Variable    ${orgType_${index}}    ${data_item[1]}
        
Create Test Variables For Put Client GST Info
    [Arguments]    ${with_address2}=true    ${gstin_info}=new    ${item}=new_record    ${field_value}=${EMPTY}   
    ${client_gst_request_list}    Set Variable    {    
    ${client_gst_list}    Split String    ${client_gst_list_${item}}    ;
    ${gstin}    Run Keyword If    "${gstin_info}"=="new"    Generate Random String    15    [NUMBERS][UPPER]    
    ...    ELSE    Set Variable    ${gstin}
    Set Test Variable    ${gstin}
    ${custom_value}    Run Keyword If    "${field_value}"!="${EMPTY}"    Split String    ${field_value}    :    ELSE    Create List    ${EMPTY}
    ${client_gst_request_list}    Run Keyword If    "${custom_value[0]}"=="email"    Catenate    ${client_gst_request_list}    "businessEmailAddress": "${custom_value[1]}"    ELSE    Catenate    ${client_gst_request_list}    "businessEmailAddress": "${client_gst_list[3]}"
    ${client_gst_request_list}    Run Keyword If    "${custom_value[0]}"=="phone"    Catenate    SEPARATOR=,    ${client_gst_request_list}    "businessPhoneNumber": "${custom_value[1]}"    ELSE    Catenate    SEPARATOR=,    ${client_gst_request_list}    "businessPhoneNumber": "${client_gst_list[2]}"
    ${client_gst_request_list}    Run Keyword If    "${custom_value[0]}"=="city"    Catenate    SEPARATOR=,    ${client_gst_request_list}    "city": "${custom_value[1]}"    ELSE    Catenate    SEPARATOR=,    ${client_gst_request_list}    "city": "${client_gst_list[7]}"
    ${client_gst_request_list}    Run Keyword If    "${custom_value[0]}"=="client"    Catenate    SEPARATOR=,    ${client_gst_request_list}    "client": "${custom_value[1]}"    ELSE    Catenate    SEPARATOR=,    ${client_gst_request_list}    "client": "${client_gst_list[1]}"      
    ${client_gst_request_list}    Run Keyword If    "${custom_value[0]}"=="clientName"    Catenate    SEPARATOR=,    ${client_gst_request_list}    "clientEntityName": "${custom_value[1]}"    ELSE    Catenate    SEPARATOR=,    ${client_gst_request_list}    "clientEntityName": "${client_gst_list[0]}"
    ${client_gst_request_list}    Run Keyword If    "${custom_value[0]}"=="address1"    Catenate    SEPARATOR=,    ${client_gst_request_list}    "entityAddressLine1": "${custom_value[1]}"    ELSE    Catenate    SEPARATOR=,    ${client_gst_request_list}    "entityAddressLine1": "${client_gst_list[4]}"
    ${client_gst_request_list}    Run Keyword If    "${with_address2}"=="true" and "${custom_value[0]}"=="address2"    Catenate    SEPARATOR=,    ${client_gst_request_list}    "entityAddressLine2": "${custom_value[1]}"
    ...    ELSE IF    "${with_address2}"=="true"    Catenate    SEPARATOR=,    ${client_gst_request_list}    "entityAddressLine2": "${client_gst_list[5]}"    
    ...    ELSE    Set Variable    ${client_gst_request_list}
    ${client_gst_request_list}    Run Keyword If    "${custom_value[0]}"=="gstin"    Catenate    SEPARATOR=,    ${client_gst_request_list}    "gstin": "${custom_value[1]}"    ELSE    Catenate    SEPARATOR=,    ${client_gst_request_list}    "gstin": "${gstin}"
    ${client_gst_request_list}    Run Keyword If    "${custom_value[0]}"=="postalCode"    Catenate    SEPARATOR=,    ${client_gst_request_list}    "postalCode": "${custom_value[1]}"    ELSE    Catenate    SEPARATOR=,    ${client_gst_request_list}    "postalCode": "${client_gst_list[6]}" 
    ${client_gst_request_list}    Run Keyword If    "${custom_value[0]}"=="state"    Catenate    SEPARATOR=,    ${client_gst_request_list}    "state": "${custom_value[1]}"    ELSE    Catenate    SEPARATOR=,    ${client_gst_request_list}    "state": "${client_gst_list[8]}"
    ${client_gst_request_list}    Run Keyword If    "${client_gst_list[9]}"!="${EMPTY}" and "${custom_value[0]}"=="orgType"	Catenate    SEPARATOR=,    ${client_gst_request_list}    "orgType": "${custom_value[1]}"    
	...    ELSE IF    "${client_gst_list[9]}"!="${EMPTY}"    Catenate    SEPARATOR=,    ${client_gst_request_list}    "orgType": "${client_gst_list[9]}"
    ...    ELSE    Set Variable    ${client_gst_request_list}
    ${client_gst_request_list}    Catenate    ${client_gst_request_list}    }   
    Set Test Variable   ${data}    ${client_gst_request_list}      
    Set Test Variable    ${client_gst_list}
    Set Test Variable    ${custom_value}   
    log    ${data}

Evict Client GST Info Cache
    [Arguments]    ${number}=2    ${token}=${default_token}
    Create Session    client-gst-info   ${${env}_base_url}    verify=True
    ${headers}    Run Keyword If    "${token}" != "None"    Create Dictionary    Content-Type=application/json    Authorization=Bearer ${token}
    ...    ELSE    Create Dictionary    Content-Type=application/json
    : FOR    ${index}    IN RANGE    0    ${number}
    \    ${response}    Get Request    client-gst-info    /apac-services-rest/api/caches/evict/client-gst-info    headers=${headers}
    \    Set Test Variable    ${response}
    \    Verify Response Status Code Is Correct    200
    \    Log    ${response.headers}
    \    Log    ${response.content}
    Set Test Variable    ${api_flag}    client-gst-info                
           
Send Get Request For Client GST Info
    [Arguments]    ${gstin}=${gstin_0}        ${token}=${default_token}    
    Create Session    client-gst-info    ${${env}_base_url}    verify=True
    ${headers}    Run Keyword If    "${token}" != "None"    Create Dictionary    Content-Type=application/json;charset=UTF-8    Authorization=Bearer ${token}
    ...    ELSE    Create Dictionary    Content-Type=application/json
    ${uri}    Set Variable If    "${gstin}"!="${EMPTY}"    apac-services-rest/api/client-gst-info/${gstin}    apac-services-rest/api/client-gst-info        
    ${response}    Get Request    client-gst-info    ${uri}    headers=${headers}
    Set Test Variable    ${response}
    Log    ${response.headers}
    Log    ${response.content}    
    Set Test Variable    ${api_flag}    client-gst-info  

Send Put Request For Client GST Info
    [Arguments]    ${token}=${default_token}
    Create Session    client-gst-info    ${${env}_base_url}    verify=True
    ${headers}    Run Keyword If    "${token}" != "None"    Create Dictionary    Content-Type=application/json    Authorization=Bearer ${token}
    ...    ELSE    Create Dictionary    Content-Type=application/json
    ${response}    Put Request    client-gst-info    apac-services-rest/api/client-gst-info    data=${data}    headers=${headers}
    Set Test Variable    ${response}
    Log    ${response.headers}
    Log    ${response.content}
    Set Test Variable    ${api_flag}    client-gst-info

Send Post Request For Client GST Info
    [Arguments]    ${filename}    ${token}=${default_token}    ${validation}=true
    ${response}    Upload File    file=${CURDIR}${/}${filename}    uri=apac-services-rest/api/client-gst-info    token=${token}    param=validate    paramvalue=${validation}    
    Set Test Variable    ${response}
                       
Send Delete Request For Client GST Info
    [Arguments]    ${gstin}=${gstin}    ${token}=${default_token}
    Create Session    client-gst-info    ${${env}_base_url}    verify=True
    ${headers}    Run Keyword If    "${token}" != "None"    Create Dictionary    Content-Type=application/json;charset=UTF-8    Authorization=Bearer ${token}
    ...    ELSE    Create Dictionary    Content-Type=application/json
    ${response}    Delete Request    client-gst-info    apac-services-rest/api/client-gst-info/${gstin}  headers=${headers}
    Set Test Variable    ${response}       
    Log    ${response.headers}
    Log    ${response.content}
    Set Test Variable    ${api_flag}    client-gst-info
           
Verify Client GST Info Is Correctly Retrieved
    [Arguments]    ${index}=0     
    Verify Json Value Is Correct    $..gstin    ${gstin_${index}}    key=Value
    Verify Json Value Is Correct    $..clientEntityName    ${client_entity_name_${index}}    key=Value
    Verify Json Value Is Correct    $..client    ${client_${index}}    key=Value
    Verify Json Value Is Correct    $..businessPhoneNumber    ${business_phone_number_${index}}
    Verify Json Value Is Correct    $..businessEmailAddress    ${business_email_add_${index}}
    Verify Json Value Is Correct    $..entityAddressLine1    ${entity_address1_${index}}    key=Value
    Run Keyword If    "${entity_address2_${index}}" != "${EMPTY}"    Verify Json Value Is Correct    $..entityAddressLine2    ${entity_address2_${index}}    key=Value
    Verify Json Value Is Correct    $..postalCode    ${postal_code_${index}}
    Verify Json Value Is Correct    $..city    ${city_${index}}    key=Value
    Verify Json Value Is Correct    $..state    ${state_${index}}    key=Value

Verify Client GST Info Are Retrieved Correctly
    [Arguments]    ${verification}=all
    : FOR    ${index}    IN RANGE    ${client_gst_list_length}
    \    Send Get Request For Client GST Info    gstin=${gstin_${index}}
    \    Verify Response Status Code Is Correct    200
    \    Run Keyword If    "${verification}"=="orgType"    Verify OrgType Is Correcty Retrieved    index=${index}     ELSE    Verify Client GST Info Is Correctly Retrieved    index=${index} 
                
Verify Client GST Info Is Added And Retrieved
    [Arguments]    ${with_address2}=true    
    Verify Json Value Is Correct    $..gstin    ${gstin}     key=Value
    Run Keyword If    "${custom_value[0]}"=="clientName"    Verify Json Value Is Correct    $..clientEntityName   ${custom_value[1]}     key=Value    ELSE    Verify Json Value Is Correct    $..clientEntityName    ${client_gst_list[0]}    key=Value
    Run Keyword If    "${custom_value[0]}"=="client"    Verify Json Value Is Correct    $..client   ${custom_value[1]}     key=Value    ELSE    Verify Json Value Is Correct    $..client    ${client_gst_list[1]}     key=Value   
    Verify Json Value Is Correct    $..businessPhoneNumber    ${client_gst_list[2]} 
    Run Keyword If    "${custom_value[0]}"=="email"    Verify Json Value Is Correct    $..businessEmailAddress    ${custom_value[1]}    ELSE    Verify Json Value Is Correct    $..businessEmailAddress    ${client_gst_list[3]}
    Run Keyword If    "${custom_value[0]}"=="address1"    Verify Json Value Is Correct    $..entityAddressLine1   ${custom_value[1]}     key=Value    ELSE    Verify Json Value Is Correct    $..entityAddressLine1    ${client_gst_list[4]}     key=Value
    Run Keyword If    "${with_address2}"=="true" and "${custom_value[0]}"=="address2"    Verify Json Value Is Correct    $..entityAddressLine2    ${custom_value[1]}     key=Value    ELSE IF    "${with_address2}"=="true"    Verify Json Value Is Correct    $..entityAddressLine2    ${client_gst_list[5]}     key=Value
    Verify Json Value Is Correct    $..postalCode    ${client_gst_list[6]} 
    Verify Json Value Is Correct    $..city    ${client_gst_list[7]}     key=Value
    Run Keyword If    "${custom_value[0]}"=="state"    Verify Json Value Is Correct    $..state    ${custom_value[1]}     key=Value    ELSE    Verify Json Value Is Correct    $..state    ${client_gst_list[8]}    key=Value
    Run Keyword If    "${custom_value[0]}"=="orgType"    Verify Json Value Is Correct    $..orgType   ${custom_value[1]}     key=Value    ELSE    Verify Json Value Is Correct    $..orgType    ${client_gst_list[9]}    key=Value

Verify Client GST Info For CSV Is Retrieved Correctly
   Create Binary File    ${CURDIR}${/}expected_clientgstinfo.csv    ${response.content} 
   ${actual_result}    Convert To String    ${response.content}
   ${actual_result}    Remove String    ${actual_result}    Free Format,GSTIN Numbers,Client Entity Name,Business Phone Number,Business Email Address,Entity Address Line 1,Entity Address Line 1,Postal Code,City,State,
   ${actual_result}    Remove String    ${actual_result}    Client,FORMAT 15 Alpha numeric,FORMAT 35 Alpha Numeric,FORMAT 15 Numeric (No Space or Hyphens etc),FORMAT 35 Alpha numeric,FORMAT 35 Alpha numeric,FORMAT 25 Alpha Numeric,FORMAT 17 Alpha Numeric,FORMAT 25 Alpha,FORMAT 25 Alpha,OrgType
   ${actual_data}    Split String    ${actual_result}    \n    
   log    ${actual_data}
   log    ${actual_result}
   ${count_actual}    Get Length    ${actual_data}  
   Should Be Equal    ${actual_data[0]}    ${EMPTY}
   Should Be Equal    ${actual_data[1]}    ${EMPTY}  
   Should Be Equal    ${actual_data[${count_actual}-1]}    ${EMPTY}
   ${range}    Run Keyword If   ${count_actual}>24    Set Variable    22    ELSE     Evaluate    ${count_actual}-1           
   : FOR    ${index}    IN RANGE    2    ${range}
   \    ${data}    Split String    ${actual_data[${index}]}    ,
   \    log    ${data}
   \    Send Get Request For Client GST Info    ${data[1]}    
   \    ${response}    To Json     ${response.content}   
   \    Run Keyword If    "${data[0]}"!="${EMPTY}"    Verify Json Value Is Correct    $..client    ${data[0]}  
   \    Verify Json Value Is Correct    $..gstin    ${data[1]}
   \    Verify Json Value Is Correct    $..clientEntityName    ${data[2]}
   \    Verify Json Value Is Correct    $..businessPhoneNumber    ${data[3]}
   \    Verify Json Value Is Correct    $..businessEmailAddress    ${data[4]}
   \    Verify Json Value Is Correct    $..entityAddressLine1    ${data[5]}
   \    Run Keyword If    "${data[6]}"!="${EMPTY}"    Verify Json Value Is Correct    $..entityAddressLine2    ${data[6]}  
   \    Verify Json Value Is Correct    $..postalCode    ${data[7]}
   \    Verify Json Value Is Correct    $..city    ${data[8]}
   \    Verify Json Value Is Correct    $..state    ${data[9]}
   \   Run Keyword If    "${data[10]}"!="${EMPTY}"    Verify Json Value Is Correct    $..orgType    ${data[10]}      
   Send Get Request For Client GST Info    ${EMPTY}
   ${json_data}    To Json    ${response.content}
   ${count}    Get Length    ${json_data}
   ${count_actual}    Evaluate    ${count_actual}-3    
   Should Be Equal    ${count_actual}    ${count}  
    
Verify Client GST Info Record Is Not Retrieved
    Verify String Does Not Contain Substring    ${response.text}    "gstin"
    Verify String Does Not Contain Substring    ${response.text}    "clientEntityName"
    Verify String Does Not Contain Substring    ${response.text}    "client"
    Verify String Does Not Contain Substring    ${response.text}    "businessPhoneNumber"
    Verify String Does Not Contain Substring    ${response.text}    "businessEmailAddress"
    Verify String Does Not Contain Substring    ${response.text}    "entityAddressLine1"
    Verify String Does Not Contain Substring    ${response.text}    "entityAddressLine2"
    Verify String Does Not Contain Substring    ${response.text}    "postalCode"
    Verify String Does Not Contain Substring    ${response.text}    "city"
    Verify String Does Not Contain Substring    ${response.text}    "state"
    Verify String Does Not Contain Substring    ${response.text}    "orgType"
    
Verify OrgType Is Correcty Retrieved
    [Arguments]    ${index}=0     
    Verify Json Value Is Correct    $..gstin    ${gstin_${index}}    key=Value
    Verify Json Value Is Correct    $..orgType    ${orgType_${index}}    key=Value

Verify The Error Message Of Response Body
    Verify Json Value Is Correct    $..status    BAD_REQUEST
    ${actual_result}    To Json    ${response.content}
    Set Test Variable    ${actual_result} 
    ${row_no}    Get Value From Json    ${actual_result}    $..rowNumber
    ${count}    Get Length    ${row_no}  
    ${expected_error}    Split String    ${client_gst_list_expected_error}    ^
    Set Test Variable    ${expected_error}       
    : FOR    ${index}    IN RANGE    0    ${count}
    \    ${error_message}    Get Value From Json    ${actual_result}    $..errors[${index}].errors
    \    ${error_message}    Convert JSON To String    ${error_message}
    \    ${error_message_count}    Split String    ${error_message}    }, {
    \    ${error_count}    Get Length    ${error_message_count}
    \    Verify The Error Message Per Row    ${error_message}    ${error_count}    ${index}               
    
Verify The Error Message Per Row
    [Arguments]    ${message}    ${count}    ${row}
    ${error_messages}    Split String    ${expected_error[${row}]}    ;
    log    ${error_messages}    
    ${expected_count}    Get Length    ${error_messages}
    ${expected_count}    Evaluate    ${expected_count}-1
    Should Be Equal    ${count}    ${expected_count}  
    Verify Json Value Is Correct    $..errors[${row}].rowNumber   ${error_messages[0]}    
    : FOR    ${index}    IN RANGE    1    ${count}
    \    Verify String Contains Substring    ${message}    ${error_messages[${index}]}
            
Verify The Number Of Records Is Correct
    [Arguments]    ${expected_record}
    ${expected_count}    Convert To Integer    ${expected_record}    
    ${actual_response}    To Json    ${response.content}    
    ${actual_count}    Get Length    ${actual_response}
    Log    ${actual_count}
    Should Be Equal    ${expected_count}    ${actual_count} 
      