*** Setting ***
Resource          ../../resources/api-imports.txt
Resource          ../../resources/api-utilities.txt
Resource          ../../resources/api-variables.txt

*** Keywords ***
Create Test Variables For Insurance Plans
    [Arguments]    ${insurance_list}=${sg_insurance_list}
    ${insurance_list}    Split String    ${insurance_list}    |
    ${insurance_list_length}    Get Length    ${insurance_list}
    Set Test Variable    ${insurance_list_length}
    Set Test Variable    ${insurance_list}
    : FOR    ${data}    IN    @{insurance_list}
    \    ${data_item}    Split String    ${data}    ,
    \    Set Test Variable    ${${data_item[0]}_commission}    ${data_item[1]}

Delete Insurance Plans And Evict Insurance Type Cache
    [Arguments]    ${type}=New Trip Plan    ${number}=2    ${token}=${default_token}
    Send Delete Request For Insurance Plans    ${type}    ${token}
    Evict Insurance Type Cache    ${number}    ${token}

Evict Insurance Type Cache
    [Arguments]    ${number}=2    ${token}=${default_token}
    Create Session    insurance    ${${env}_base_url}    verify=True
    ${headers}    Run Keyword If    "${token}" != "None"    Create Dictionary    Content-Type=application/json    Authorization=Bearer ${token}
    ...    ELSE    Create Dictionary    Content-Type=application/json
    : FOR    ${index}    IN RANGE    0    ${number}
    \    ${response}    Get Request    insurance    /apac-services-rest/api/caches/evict/insurance-types    headers=${headers}
    \    Set Test Variable    ${response}
    \    Verify Response Status Code Is Correct    200
    \    Log    ${response.headers}
    \    Log    ${response.content}
    Set Test Variable    ${api_flag}    insurance

Send Delete Request For Insurance Plans
    [Arguments]    ${type}    ${token}=${default_token}
    Create Session    insurance    ${${env}_base_url}    verify=True
    ${headers}    Run Keyword If    "${token}" != "None"    Create Dictionary    Content-Type=application/json    Authorization=Bearer ${token}
    ...    ELSE    Create Dictionary    Content-Type=application/json
    ${response}    Delete Request    insurance    /apac-services-rest/api/insurance/${type}    headers=${headers}
    Set Test Variable    ${response}
    Log    ${response.headers}
    Log    ${response.content}
    Set Test Variable    ${api_flag}    insurance

Send Get Request For Insurance Plans
    [Arguments]    ${token}=${default_token}
    Create Session    insurance    ${${env}_base_url}    verify=True
    ${headers}    Run Keyword If    "${token}" != "None"    Create Dictionary    Content-Type=application/json    Authorization=Bearer ${token}
    ...    ELSE    Create Dictionary    Content-Type=application/json
    ${response}    Get Request    insurance    /apac-services-rest/api/insurance    headers=${headers}
    Set Test Variable    ${response}
    Log    ${response.headers}
    Log    ${response.content}
    Set Test Variable    ${api_flag}    insurance

Send Put Request For Insurance Plans
    [Arguments]    ${type}=Single Trip Plan    ${commission}=35.0    ${token}=${default_token}
    Create Session    insurance    ${${env}_base_url}    verify=True
    ${headers}    Run Keyword If    "${token}" != "None"    Create Dictionary    Content-Type=application/json    Authorization=Bearer ${token}
    ...    ELSE    Create Dictionary    Content-Type=application/json
    ${data}    Set Variable    {"type":"${type}","commission":${commission}}
    ${data}    Replace String    ${data}    "null"    null
    ${response}    Put Request    insurance    /apac-services-rest/api/insurance/    data=${data}    headers=${headers}
    Set Test Variable    ${response}
    Log    ${response.headers}
    Log    ${response.content}
    Set Test Variable    ${api_flag}    insurance

Update Insurance Plans To Original Value And Evict Insurance Type Cache
    [Arguments]    ${type}=Single Trip Plan    ${commission}=35.0    ${number}=2    ${token}=${default_token}
    Send Put Request For Insurance Plans    ${type}    ${commission}    ${token}
    Evict Insurance Type Cache    ${number}    ${token}

Verify Insurance Plans Are Correctly Retrieved
    #: FOR    ${index}    IN RANGE    0    ${insurance_list_length}
    #\    Verify Json Value Is Correct    $.[${index}].commission    ${insurance_commission_${index}}    integer
    #\    Verify Json Value Is Correct    $.[${index}].type    ${insurance_type_${index}}
    #${index}    Evaluate    ${index}+1
    #Verify Json Element Does Not Exist    $.[${index}].commission
    ${data}    Remove String    ${response.text}    [
    ${data}    Remove String    ${data}    ]
    ${data_list}    Split String    ${data}    },{
    : FOR    ${item}    IN    @{data_list}
    \    ${item}    Remove String    ${item}    "
    \    ${item}    Remove String    ${item}    {
    \    ${item}    Remove String    ${item}    }
    \    ${item}    Replace String    ${item}    :    ,
    \    ${items}    Split String    ${item}    ,
    \    Verify Actual Numerical Value Matches Expected Numerical Value    ${items[3]}    ${${items[1]}_commission}

Verify That Insurance Plans Are Not Retrieved
    Verify String Does Not Contain Substring    ${response.content}    "commission"
    Verify String Does Not Contain Substring    ${response.content}    "type"
    Verify String Does Not Contain Substring    ${response.content}    "id"
